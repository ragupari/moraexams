---
import { LANGUAGES_DISPLAY_TEXT, LIST_OF_LANGUAGES } from "../i18n/ui";
import { getLangFromUrl, replaceLanguage } from "../i18n/utils";

interface Props {
	class?: string;
}

interface OtherLanguage {
	langName: string;
	redirectUrl: string;
}

const { class: className } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const otherLanguages: OtherLanguage[] = new Array(LIST_OF_LANGUAGES.length - 1);

let lastIndex = 0;
for (let i = 0; i < LIST_OF_LANGUAGES.length; i++) {
	const currentLanguage = LIST_OF_LANGUAGES[i];
	if (currentLanguage == lang) continue;

	otherLanguages[lastIndex] = {
		langName: LANGUAGES_DISPLAY_TEXT[currentLanguage],
		redirectUrl: replaceLanguage(Astro.url, currentLanguage),
	};
	lastIndex++;
}
---

<div class={`w-fit mx-auto h-fit ${className}`}>
	{
		otherLanguages.map((t, i) => {
			return (
				<a href={t.redirectUrl} class="no-underline">
					<button class="bg-transparent border-8 rounded-full px-3 text-white cursor-pointer hover:bg-white hover:text-primary-900 sm:px-6 h-fit">
						{t.langName}
					</button>
				</a>
			);
		})
	}
</div>
<!-- todo: make the button more standard -->

<style>
	button {
		border: 1px solid white;
	}
	html[lang="en"] button {
		@apply pb-1;
	}
</style>
